counts(brk)
counts()
counts(brk)
counts
qplot(price,data=diamonds,binwidth=18497/30,fill=cut)
qplot(price,data=diamonds,geom="density")
qplot(price,data=diamonds,geom="density",color=cut)
qplot(carat,price,data=diamonds)
qplot(carat,price,data=diamonds,shape=cut)
qplot(carat,price,data=diamonds,color=cut)
qplot(carat,price,data=diamonds,color=cut,geom_smooth(method="lm"))
qplot(carat,price,data=diamonds,color=cut)+geom_smooth(method="lm"))
qplot(carat,price,data=diamonds,color=cut)+geom_smooth(method="lm")
qplot(carat,price,data=diamonds,color=cut)+geom_smooth(method="lm")+facets=.~cut
qplot(carat,price,data=diamonds,color=cut)+geom_smooth(method="lm")+facets=.~cut
qplot(carat,price,data=diamonds,color=cut)+geom_smooth(method="lm")
qplot(carat,price,data=diamonds,color=cut,facets=.~cut)+geom_smooth(method="lm")
g <- ggplot(diamonds, aes(depth,price))
summary(g)
g+geom_point(alpha=1/3)
cutpoints <- quantile(diamonds$carat,seq(0,1,length=4),na.rm=TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat,cutpoints)
g <- ggplot(diamonds,aes(depth,price))
g+geom_point(alpha=1/3)+facet_grid=cut~car2
g+geom_point(alpha=1/3,facet_grid=cut~car2)
g+geom_point(alpha=1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha=1/3)+facet_grid(cut~car2)+geom_smooth(method="lm",size=3,color="pink")
ggplot(diamonds,aes(carat,price))+geom_boxplot()+facet_grid(.~cut)
q
q
q()
q()
library(swirl)
swirl()
dist()
dist(dataFrame)
hclust(distxy)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
plot(as.dendrogram(hc),h=1.5,col="blue")
abline(h=1.5, col="blue")
abline(h=0.4, col="red")
0
6
7
12
9
5
4
3
5
1
2
3
4
6
7
8
9
10
11
12
abline(h=0.05, col="green")
dist(dFsm)
hc
heatmap(dataMatrix,col=cm.colors(25)
heatmap(dataMatrix,col=cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
library(swirl)
swirl()
cmat
points(cx,cy,col=c("red","orange","purle"),pch=3,cex=2,lwd=2)
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
mdist(x,y,cx,cy)
apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,cols1[newClusts])
points(x,y,pch=19,cex=2,cols1[newClust])
points(x,y,pch=19,cex=2,cols1[newClust])
points(x,y,pch=19,cex=2,col=cols1[newClust])
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx,newCy,pch=8,cex=2,lwd=2,col=cols1)
points(newCx,newCy,col=cols1,pch=8,cex=2,lwd=2)
mdist(x,y,newCx,newCy)
apply(distTmp2,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx,finalCy,cols1,pch=p,cex=2,lwd=2)
points(finalCx,finalCy,cols1,pch=9,cex=2,lwd=2)
points(finalCx,finalCy,col=cols1,pch=9,cex=2,lwd=2)
kmeans(dataFrame,centers=3)
kmobj$iter
kmObj$iter
plot(x,y,col=kmObj$cluster,pch=19,cex=2)
plot(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
points(kmObj$centers,col=c("black","red","green"),pch=3,cex=3,lwd=3)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster,pch=19,cex=2)
libarry(swirl)
library(swirl)
swirl()
head(dataMatrix
)
heatmap(dataMatrix)
myedit(addPatt.R)
myedit("addPatt.R")
source("addPatt.R",local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu%*%t(matv)
matu%*%diag%*%t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd$v[,1]
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$d
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <- svd1$d[1]
a1 <- (svd1$u[,1]*svd1$d[1]%*%t(svd1$v[,1])
a1 <- (svd1$u[,1]*svd1$d[1])%*%t(svd1$v[,1])
myImage(a1)
a2<-svd$u%*%svd1$d[1:2]%*%svd1$v[,1:2]
a2<-svd1$u[,1:2]%*%svd1$d[1:2]%*%svd1$v[,1:2]
a2<-svd1$u%*%svd1$d[1:2]%*%svd1$v
a2<-svd1$u[,1:2]%*%diag(svd1$d[1:2])%*%svd1$v[,1:2]
a2<-svd1$u[,1:2]%*%diag(svd1$d[1:2])%*%t(svd1$v[,1:2])
myImage(a2)
myImage<-svd1$u[,1:5]%*%diag(svd1$d[1:5])%*%t(svd1$v[,1:5])
myImage(svd1$u[,1:5]%*%diag(svd1$d[1:5])%*%t(svd1$v[,1:5]))
myImage(svd1$u[,1:5]%*%diag(svd1$d[1:5])%*%t(svd1$v[,1:5]))
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
remove(myImage)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
next()
q
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
bye
info()
bye()
swirl()
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
q
q()
library(swirl)
swirl()
dim(ssd)
names(562:563)
names(ssd[562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
sub1 <- subset(ssd, subject=1)
sub1 <- subset(ssd, subject==1)
dim(sub1)
names(sub1,12)
names(sub1)
names(sub1[1:12])
myedit(showXY.R)
myedit("showXY.R")
showMe(1:6)
mdist <- table(,sub1[1:3])
mdist <- dist(,sub1[1:3])
mdist <- dist(sub1,sub1[1:3])
mdist <- dist(sub1)
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclust(mdist)
hclustering <- hclust(mdist)
myplclust(hclustering,lab.col=unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxcon <-which.max(svd1$v[,2])
maxCon <-which.max(svd1$v[,2])
mdist <- dist(sub1[,c(10:12,maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col=unclass(sub1$activity))
sub1[maxCon]
names(sub1[maxCon])
kClust <- kmeans(sub1,centers=6)
kClust <- kmeans(sub1[,-c(10:12)],centers=6)
colnames(sub1)
kClust <- kmeans(sub1[,-c(562,563)],centers=6)
table(kClust$cluster,sub1$activity)
kClust <- kmeans(sub1[,-c(562,563)],centers=6,nstart=100)
table(kClust$cluster,sub1$activity)
dim(kClust)
dim(kClust$centers)
laying <- kClust$size==29
laying <- which(kClust$size==29)
plot(kClust$centers[laying,1:12],pch=19,ylab="Laying Cluster")
names(sub1[,1:3])
walkdown <- which(kClust$size==49)
plot(kClust$centers[walkdown,1:12],pch=19,ylab="Walkdown Cluster")
q()
library(swirl)
swirl()
dim(pm0)
head(pm0)
colnames(cnames)
cnames
strsplit(cnames,"|",arg=TRUE)
strsplit(cnames,"|",TRUE)
cnames<-strsplit(cnames,"|",fixed=TRUE)
cnames
names(pm0)<-make.names(cnames[[1]][wcol])
head(pm0)
x0<-pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1)<-make.names(cnames[[1]][wcol])
dim(pm1)
x1<-pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
x1<0
negative<-x1<0
sum(negative,na.rm=TRUE)
mean(negative,na.rm=TRUE)
dates <- pm1$Date
str(dates)
dates<-as.date(as.character(dates),"%Y%m%d")
dates<-as.Date(as.character(dates),"%Y%m%d")
head(dates)
hist(dates[negative],"month")
str(site0)
both<-intersect(site0,site1)
both
head(pm0)
cnt0 <-subset(pm0,both == TRUE)
cnt0 <-subset(pm0,State.Code == 36 & county.site %in% both)
cnt1 <-subset(pm1,State.Code == 36 & county.site %in% both)
sapply(split(cnt0,cnt0$county.site,nrow))
sapply(split(cnt0,cnt0$county.site),nrow)
sapply(split(cnt1,cnt1$county.site),nrow)
pm0sub <- subset(cnt0,county.code=63 & Site.ID=2008)
pm0sub <- subset(cnt0,county.code=63 & Site.ID=="2008")
pm0sub <- subset(cnt0,County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1,County.Code==63 & Site.ID==2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0<-as.Date(as.character(pm0sub$Date),"%Y%m%d")
dates1<-as.Date(as.character(pm1sub$Date),"%Y%m%d")
par(mfrow=c(1,2),mar=c(4,4,2,1))
plot(dates0,x0sub,pch=20)
abline(median(x0sub),na.rm=TRUE,lwd=2)
abline(median(x0sub,na.rm=TRUE),lwd=2)
abline(median(x0sub),lwd=2)
abline(median(x0sub),lwd(2))
abline(x0sub,lwd=2)
?abline
abline(median((x0sub),na.rm=TRUE),lwd=2)
abline(lwd=2)
abline(h=median(x0sub,na.rm=TRUE),lwd=2)
plot(dates1,x1sub,pch=20)
abline(h=median(x1sub,na.rm=TRUE),lwd=2)
rng <- range(x0sub,x1sub,na.rm=TRUE)
rng
mn0 <- with(pm0,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn0)
mn1 <- with(pm1,tapply(Sample.Value,State.Code,mean,na.rm=TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0<-data.frame(state = names(mn0),mean=mn0)
d1<-data.frame(state = names(mn1),mean=mn1)
mrg <- merge(d0,d1,arg = "state")
mrg <- merge(d0,d1,by = "state")
dim(mrg)
head(mrg)
plot(mrg,rep(1,52),mrg[,2],xlim=c(.5,2,.5))
plot(mrg,plot(rep(1,52),mrg[,2],xlim=c(.5,2,.5))
plot(mrg,plot(rep(1,52),mrg[,2],xlim=c(.5,2,.5)))
plot(mrg,plot(rep(1,52),mrg[,2],xlim=c(.5,2.5)))
with(mrg,plot(rep(1,52),mrg[,2],xlim=c(.5,2.5)))
with(mrg,plot(rep(2,52),mrg[,3]))
with(mrg,points(rep(2,52),mrg[,3]))
with(mrg,plot(rep(1,52),mrg[,2],xlim=c(.5,2.5)))
with(mrg,points(rep(2,52),mrg[,3]))
segments(rep(1,52),mrg[,2],rep(2,52),mrg[,3])
mrg[mrg$mean.x<mrg$mean.y,]
q()
getwd()
setwd("D:/Users/tsoiwa/datasciencecoursera/ReproductiveResearch")
data <- read.csv("activity.csv", header = TRUE, sep = ',', colClasses = c("numeric","character","integer"))
library (lubridate)
data$date <- ymd(data$date)
data <- aggregate(steps~date,data,sum)
hist(data$steps)
data <- read.csv("activity.csv", header = TRUE, sep = ',', colClasses = c("numeric","character","integer"))
data1 <- aggregate(steps~date,data,sum)
hist(data1$steps, col = "green")
steps_mean <- mean(data1$steps)
steps_mean
steps_median <- median(data1$steps)
steps_median
View(data1)
data2[data==0] <- NA
data2 <- aggregate(steps~interval,data,mean)
plot(data2$interval,data2$steps)
plot(data2$interval,data2$steps, type = "1")
plot(data2$interval,data2$steps, type = 1)
plot(data2$interval,data2$steps, type = "l")
plot(data2$interval,data2$steps, type = "l", xlab = "Interval", ylab = "Number of Steps", main = "Average Number of Steps Taken")
data3 <- data
data3[data3==0] <- NA
myCleanData <- na.omit(data)
myCleanData <- aggregate(steps~date,myCleanData,sum)
hist(myCleanData$steps, main = "Total Steps per Day", col = "red", xlab = "Number of Steps")
mean(myCleanData$steps)
median(myCleanData$steps)
data3 <- data
rowsum(data3)
rowSums(data3)
median(myCleanData$steps, na.rm = TRUE)
opts_chunks$set(echo=TRUE)
opts_chunk$set(echo=TRUE)
library(knitr)
opts_chunk$set(echo=TRUE)
setwd("D:/Users/tsoiwa/datasciencecoursera/ReproductiveResearch")
data <- read.csv("activity.csv", header = TRUE, sep = ',', colClasses = c("numeric","character","integer"))
library (lubridate)
data$date <- ymd(data$date)
data1 <- aggregate(steps~date,data,sum)
hist(data1$steps, main = "Total Number of Steps Taken per Day", col = "green", xlab = "Number of Steps")
steps_mean <- mean(data1$steps)
steps_median <- median(data1$steps)
data2 <- aggregate(steps~interval,data,mean)
plot(data2$interval,data2$steps, type = "l", xlab = "Interval", ylab = "Number of Steps", main = "Average Number of Steps Taken")
data3 <- data
data3[data3==0] <- NA
myCleanData <- na.omit(data)
myCleanData <- aggregate(steps~date,myCleanData,sum)
hist(myCleanData$steps, main = "Total Steps per Day", col = "red", xlab = "Number of Steps")
View(myCleanData)
mean(myCleanData$steps)
median(myCleanData$steps)
library(knitr)
opts_chunk$set(echo=TRUE)
setwd("D:/Users/tsoiwa/datasciencecoursera/ReproductiveResearch")
data <- read.csv("activity.csv", header = TRUE, sep = ',', colClasses = c("numeric","character","integer"))
library (lubridate)
data$date <- ymd(data$date)
data1 <- aggregate(steps~date,data,sum)
hist(data1$steps, main = "Total Number of Steps Taken per Day", col = "green", xlab = "Number of Steps")
steps_mean <- mean(data1$steps)
steps_median <- median(data1$steps)
data2 <- aggregate(steps~interval,data,mean)
plot(data2$interval,data2$steps, type = "l", xlab = "Interval", ylab = "Number of Steps", main = "Average Number of Steps Taken")
data3 <- data
myCleanData <- na.omit(data)
myCleanData <- aggregate(steps~date,myCleanData,sum)
hist(myCleanData$steps, main = "Total Steps per Day", col = "red", xlab = "Number of Steps")
mean(myCleanData$steps)
median(myCleanData$steps)
sum(is.na(data3$steps))
data3<-data3[complete.cases(data3[,1]))
data3<-data3[complete.cases(data3),1]))
data3 <- data3[complete.cases(data3),1]
head(data3)
data3 <- data3[complete.cases(data3),1:3]
data3 <- data3[complete.cases(data3[,1]),]
data3 <- data
data3 <- data3[complete.cases(data3[,1]),]
mean(data3$steps)
library(knitr)
opts_chunk$set(echo=TRUE)
setwd("D:/Users/tsoiwa/datasciencecoursera/ReproductiveResearch")
data <- read.csv("activity.csv", header = TRUE, sep = ',', colClasses = c("numeric","character","integer"))
library (lubridate)
data$date <- ymd(data$date)
data1 <- aggregate(steps~date,data,sum)
hist(data1$steps, main = "Total Number of Steps Taken per Day", col = "green", xlab = "Number of Steps")
steps_mean <- mean(data1$steps)
steps_median <- median(data1$steps)
data2 <- aggregate(steps~interval,data,mean)
plot(data2$interval,data2$steps, type = "l", xlab = "Interval", ylab = "Number of Steps", main = "Average Number of Steps Taken")
data3 <- data
myCleanData <- data3[complete.cases(data3[,1]),]
myCleanData <- aggregate(steps~date,myCleanData,sum)
hist(myCleanData$steps, main = "Total Steps per Day", col = "red", xlab = "Number of Steps")
mean(myCleanData$steps)
median(myCleanData$steps)
data3 <- data
myCleanData <- data3[complete.cases(data3[,1]),]
sum(is.na(myCleanData$steps))
median(myCleanData$steps,na.rm = TRUE)
myCleanData <- aggregate(steps~date,myCleanmeData,sum)
myCleanData <- aggregate(steps~date,myCleanData,sum)
median(myCleanData$steps,na.rm = TRUE)
mean(myCleanData,na.rm=TRUE)
mean(myCleanData$steps,na.rm=TRUE)
myCleanData <- data3[complete.cases(data3[,1]),]
library(knitr)
opts_chunk$set(echo=TRUE)
setwd("D:/Users/tsoiwa/datasciencecoursera/ReproductiveResearch")
data <- read.csv("activity.csv", header = TRUE, sep = ',', colClasses = c("numeric","character","integer"))
library (lubridate)
data$date <- ymd(data$date)
data1 <- aggregate(steps~date,data,sum)
hist(data1$steps, main = "Total Number of Steps Taken per Day", col = "green", xlab = "Number of Steps")
steps_mean <- mean(data1$steps)
steps_median <- median(data1$steps)
data2 <- aggregate(steps~interval,data,mean)
plot(data2$interval,data2$steps, type = "l", xlab = "Interval", ylab = "Number of Steps", main = "Average Number of Steps Taken")
data3 <- data
myCleanData <- data3[complete.cases(data3[,1]),]
myCleanData <- aggregate(steps~date,myCleanData,sum)
hist(myCleanData$steps, main = "Total Steps per Day", col = "red", xlab = "Number of Steps")
data3$steps(is.na(data3$steps)) <- tapply(data3$steps, data3$interval, mean, na.rm=TRUE, simplify = TRUE)
avgstepsint<-tapply(data3$steps,data3$interval,mean,na.rm=TRUE,simplify = TRUE)
data3$steps(is.na(data3$steps)) <- avgstepsint
data3$steps[is.na(data3$steps)] <- avgstepsint
sum(is.na(data3))
myCleanData <- aggregate(steps~date,data3,sum)
median(myCleanData$steps)
mean(myCleanData$steps)
data3 <- data
data3$steps[is.na(data3$steps)] <- tapply(data3$steps,data3$interval,mean,na.rm=TRUE,simplify = TRUE)
myCleanData <- aggregate(steps~date,data3,sum)
hist(myCleanData$steps, main = "Total Steps per Day", col = "red", xlab = "Number of Steps")
NewSteps_mean <- mean(myCleanData$steps)
NewSteps_median <- median(myCleanData$steps)
diff1 <- NewSteps_mean - NewSteps_median
colnames(data3)
colnames(data3) <- c(..."Weekdays")
data3$weekdays <- as.Date(data3$date,'%d-%m-%Y')
head data3
head(data3)
data3$weekdays <- weekdays(as.Date(data3$date,'%d-%m-%Y'))
head(data3)
data3$weektype <- ifelse(weekdays.Date(data3$date)=="Saturday"|weekdays.Date(data3$date)=="Sunday","weekend","weekday")
head(data3)
weekend_activity <- aggregate(steps~interval,data3,mean)
head(weekend_activity)
activitybytype<- group_by(data3,date,interval)
library(dplyr)
activitybytype<- group_by(data3,date,interval)
head(activitybytype)
weekend_activity <- aggregate(steps~interval+weektype,data3,mean)
head(weekend_activity)
xyplot(activitybytype$steps~activitybytype$interval|activitybytype$weektype)
library(ggplot2)
xyplot(activitybytype$steps~activitybytype$interval|activitybytype$weektype)
ggplot(activitybytype, aes(x=interval,y=steps,color=weektype))+geom_line()
ggplot(activitybytype, aes(x=interval,y=steps,color=weektype))+geom_line()+facet_wrap(~weektype,ncol=1,nrow=2)
library(knitr)
opts_chunk$set(echo=TRUE)
setwd("D:/Users/tsoiwa/datasciencecoursera/ReproductiveResearch")
data <- read.csv("activity.csv", header = TRUE, sep = ',', colClasses = c("numeric","character","integer"))
library (lubridate)
data$date <- ymd(data$date)
data1 <- aggregate(steps~date,data,sum)
hist(data1$steps, main = "Total Number of Steps Taken per Day", col = "green", xlab = "Number of Steps")
steps_mean <- mean(data1$steps)
steps_median <- median(data1$steps)
data2 <- aggregate(steps~interval,data,mean)
plot(data2$interval,data2$steps, type = "l", xlab = "Interval", ylab = "Number of Steps", main = "Average Number of Steps Taken")
data3 <- data
data3$steps[is.na(data3$steps)] <- tapply(data3$steps,data3$interval,mean,na.rm=TRUE,simplify = TRUE)
myCleanData <- aggregate(steps~date,data3,sum)
hist(myCleanData$steps, main = "Total Steps per Day", col = "red", xlab = "Number of Steps")
NewSteps_mean <- mean(myCleanData$steps)
NewSteps_median <- median(myCleanData$steps)
diff1 <- NewSteps_mean - NewSteps_median
data3$weektype <- ifelse(weekdays.Date(data3$date)=="Saturday"|weekdays.Date(data3$date)=="Sunday","weekend","weekday")
weekend_activity <- aggregate(steps~interval+weektype,data3,mean)
ggplot(activitybytype, aes(x=interval,y=steps,color=weektype))+geom_line()+facet_wrap(~weektype,ncol=1,nrow=2)
library(knitr)
opts_chunk$set(echo=TRUE)
setwd("D:/Users/tsoiwa/datasciencecoursera/ReproductiveResearch")
data <- read.csv("activity.csv", header = TRUE, sep = ',', colClasses = c("numeric","character","integer"))
library (lubridate)
data$date <- ymd(data$date)
data1 <- aggregate(steps~date,data,sum)
hist(data1$steps, main = "Total Number of Steps Taken per Day", col = "green", xlab = "Number of Steps")
steps_mean <- mean(data1$steps)
steps_median <- median(data1$steps)
data2 <- aggregate(steps~interval,data,mean)
plot(data2$interval,data2$steps, type = "l", xlab = "Interval", ylab = "Number of Steps", main = "Average Number of Steps Taken")
data3 <- data
data3$steps[is.na(data3$steps)] <- tapply(data3$steps,data3$interval,mean,na.rm=TRUE,simplify = TRUE)
myCleanData <- aggregate(steps~date,data3,sum)
hist(myCleanData$steps, main = "Total Steps per Day", col = "red", xlab = "Number of Steps")
NewSteps_mean <- mean(myCleanData$steps)
NewSteps_median <- median(myCleanData$steps)
diff1 <- NewSteps_mean - NewSteps_median
data3$weektype <- ifelse(weekdays.Date(data3$date)=="Saturday"|weekdays.Date(data3$date)=="Sunday","weekend","weekday")
weekend_activity <- aggregate(steps~interval+weektype,data3,mean)
ggplot(weekend_activity, aes(x=interval,y=steps,color=weektype))+geom_line()+facet_wrap(~weektype,ncol=1,nrow=2)
